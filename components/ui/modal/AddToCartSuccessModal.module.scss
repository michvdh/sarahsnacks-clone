@import "../../../styles/variables";
@import "../../../styles/mixins";

.success-backdrop {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  background-color: $overlay--dark;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 900;
}

.success-overlay {
  background-color: white;
  // position: fixed;
  // margin: 0 auto;
  // top: 50%;
  // left: 50%;
  // transform: translate(-50%, -50%);
  
  z-index: 999;
  padding: 3rem;
  border-radius: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  width: 95%;

  animation-duration: 0.4s;
  animation-iteration-count: 1;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -ms-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  animation-fill-mode: forwards;

  @include respond(screen-430) {
    width: initial;
  }

  @include respond(screen-800) {
    border-radius: 60rem;
    width: 60rem;
    height: 60rem;
  }

  .check-icon {
    margin-bottom: 3rem;

    .icon-container {
      width: 8rem;
      height: 8rem;
      background-color: $dark-green;
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: 11rem;

      @include respond(screen-800) {
        width: 11rem;
        height: 11rem;
      }

      svg {
        width: 7rem;
        height: 7rem;

        @include respond(screen-800) {
          width: initial;
          height: initial;
        }
      }

      // animation flow
      // 1. border forming clockwise, start at 3'oclock
      // 2. border complete
      // 3. fill circle's color going to the center
      // 4. check icon appears - as if like someone wrote a check mark
      // 5. a quick pulse / heartbeat effect together with check icon appearance
        // check icon and pulse effect are simultaneous
    }
  }

  .cart-update {
    text-align: center;
    margin-bottom: 4rem;

    h2 {
      text-transform: uppercase;
      font-size: $font-header--xs;
      margin-bottom: 1.5rem;
      font-weight: $font-weight--extra-bold;
    }

    p {
      color: $darker-gray;

      span {
        color: $dark-green;
        font-weight: $font-weight--medium;
      }
    }
  }

  .btn-container {
    display: flex;
    column-gap: 2rem;
    flex-direction: column;
    row-gap: 1rem;

    @include respond(screen-800) {
      flex-direction: row;
    }

    button {
      font-size: $font-size--xs;
      min-width: 21rem;

      * {
        font-size: inherit !important;
      }
    }
  }
}


.animate-open {
  animation-name: open;
}

.animate-close {
  animation-name: close;
}

@keyframes open {
  // 0%   {transform: scale(0);}
  // 100% {transform: scale(1);}

  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes close {
  // 0%   {transform: scale(1);}
  // 100% {transform: scale(0);}

  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}